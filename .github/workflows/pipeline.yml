name: Deploy to PyPi

on:
  workflow_dispatch:
  push:
      branches:
        - development
        - production

jobs:


  Validate:
    runs-on: ubuntu-latest
    environment: CI/CD Pipeline
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Installing Python
        run: sudo apt update && sudo apt upgrade && sudo add-apt-repository ppa:deadsnakes/ppa -y && sudo apt install python3.11

      - name: Installing Dependencies
        run: python3.11 -m pip3 install -r requirements.txt --upgrade && python3.11 -m pip3 install -r requirements-dev.txt --upgrade

      - name: Running MyPy check
        run: python3.11 -m mypy . --install-types --non-interactive

      - name: Running Tests
        shell: bash
        env:
          ENVIRONMENT: ${{ vars.ENVIRONMENT }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_KEY_VAULT_URL: ${{ secrets.AZURE_KEY_VAULT_URL }}
        run: python3.11 -m pytest --cov sirius src/tests --cov-report xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}


  Deploy-to-PyPi:
    needs: Validate
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Installing Python
        run: sudo apt update && sudo add-apt-repository ppa:deadsnakes/ppa -y && sudo apt install python3.11 twine

      - name: Packaging the SDK
        run: python3 setup.py sdist

      - name: Uploading to PyPi
        env:
          PYPI_ACCESS_TOKEN: ${{ secrets.PYPI_ACCESS_TOKEN }}
        run: twine upload -u __token__ -p $PYPI_ACCESS_TOKEN dist/*
