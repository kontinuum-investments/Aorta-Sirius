name: Deploy to PyPi

on:
  workflow_dispatch:
  push:
      branches:
        - development
        - production

jobs:
  Qodana-Scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Installing Python
        run: sudo apt update && sudo apt install python3

      - name: Installing Dependencies
        run: python3 -m pip install -r requirements.txt

      - name: 'Qodana Scan'
        uses: JetBrains/qodana-action@main
        env:
          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN }}

  Validate:
    runs-on: ubuntu-latest
    environment: CI/CD Pipeline
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Installing Python
        run: sudo apt update && sudo apt install python3.11

      - name: Installing Dependencies
        run: pip install -r requirements.txt && pip install -r requirements-dev.txt

      - name: Running MyPy check
        run: mypy . --install-types --non-interactive

      - name: Running Tests
        shell: bash
        env:
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          SENTRY_URL: ${{ secrets.SENTRY_URL }}
          WISE_PRIMARY_ACCOUNT_API_KEY: ${{ secrets.WISE_PRIMARY_ACCOUNT_API_KEY }}
          WISE_SECONDARY_ACCOUNT_API_KEY: ${{ secrets.WISE_SECONDARY_ACCOUNT_API_KEY }}
          APPLICATION_NAME: ${{ vars.APPLICATION_NAME }}
          ENVIRONMENT: ${{ vars.ENVIRONMENT }}
          MONGO_DB_CONNECTION_STRING: ${{ secrets.MONGO_DB_CONNECTION_STRING }}
          DISCORD_SERVER_OWNER_USERNAME: ${{ vars.DISCORD_SERVER_OWNER_USERNAME }}
          ENTRA_ID_TENANT_ID: ${{ secrets.ENTRA_ID_TENANT_ID }}
          ENTRA_ID_CLIENT_ID: ${{ secrets.ENTRA_ID_CLIENT_ID }}
        run: pytest --cov sirius src/tests --cov-report xml

      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}


  Deploy-to-PyPi:
    needs: Validate
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Installing Python
        run: sudo apt update && sudo apt install python3.11 twine

      - name: Packaging the SDK
        run: python3 setup.py sdist

      - name: Uploading to PyPi
        env:
          PYPI_ACCESS_TOKEN: ${{ secrets.PYPI_ACCESS_TOKEN }}
        run: twine upload -u __token__ -p $PYPI_ACCESS_TOKEN dist/*
